General Principles of Software
Validation; Final Guidance for
Industry and FDA Staff
Document issued on: January 11, 2002
This document supersedes the draft document, "General Principles of
Software Validation, Version 1.1, dated June 9, 1997.
U.S. Department Of Health and Human Services
Food and Drug Administration
Center for Devices and Radiological Health
Center for Biologics Evaluation and Research
Page ii
General Principles of Software ValidationGuidance for Industry and FDA Staff
Preface
Public Comment
Comments and suggestions may be submitted at any time for Agency consideration to Dockets
Management Branch, Division of Management Systems and Policy, Office of Human Resources and
Management Services, Food and Drug Administration, 5630 Fishers Lane, Room 1061, (HFA-305),
Rockville, MD, 20852. When submitting comments, please refer to the exact title of this guidance
document. Comments may not be acted upon by the Agency until the document is next revised or
updated.
For questions regarding the use or interpretation of this guidance which involve the Center for Devices
and Radiological Health (CDRH), contact John F. Murray at (301) 594-4659 or email
jfm@cdrh.fda.gov
For questions regarding the use or interpretation of this guidance which involve the Center for Biologics
Evaluation and Research (CBER) contact Jerome Davis at (301) 827-6220 or email
davis@cber.fda.gov.
Additional Copies
CDRH
Additional copies are available from the Internet at: www.fda.gov/MedicalDevices/
DeviceRegulationandGuidance/GuidanceDocuments/UCM085281.htm.
You may also send an e-mail request to dsmica@fda.hhs.gov to receive an electronic copy of the
guidance or send a fax request to 301-847-8149 to receive a hard copy. Please use the document
number (938) to identify the guidance you are requesting.
CBER
Additional copies are available from the Internet at: http://www.fda.gov/cber/guidelines.htm, by
writing to CBER, Office of Communication, Training, and Manufacturers' Assistance (HFM-
40), 1401 Rockville Pike, Rockville, Maryland 20852-1448, or by telephone request at 1-
800-835-5709 or 301-827-1800.
Page iii
General Principles of Software ValidationGuidance for Industry and FDA Staff
Table of Contents
SECTION 1. PURPOSE .............................................................................................................. 1
SECTION 2. SCOPE ................................................................................................................... 1
2.1. Applicability........................................................................................................................ 2
2.2. Audience ............................................................................................................................. 2
2.3. THE LEAST BURDENSOME APPROACH................................................................... 2
2.4. Regulatory Requirements for Software Validation.......................................................... 3
2.4. Quality System Regulation vs Pre-Market Submissions ................................................. 4
SECTION 3. CONTEXT FOR SOFTWARE VALIDATION ................................................... 5
3.1. Definitions and Terminology ............................................................................................. 5
3.1.1 Requirements and Specifications................................................................................... 5
3.1.2 Verification and Validation........................................................................................... 6
3.1.3 IQ/OQ/PQ...................................................................................................................... 7
3.2. Software Development as Part of System Design............................................................ 7
3.3. Software is Different from Hardware ................................................................................ 8
3.4. Benefits of Software Validation......................................................................................... 9
3.5 Design Review................................................................................................................... 9
SECTION 4. PRINCIPLES OF SOFTWARE VALIDATION ............................................... 11
4.1. Requirements ................................................................................................................... 11
4.2. Defect Prevention ............................................................................................................ 11
4.3. Time and Effort ................................................................................................................ 11
4.4. Software Life Cycle.......................................................................................................... 11
4.5. Plans .................................................................................................................................. 12
4.6. Procedures........................................................................................................................ 12
4.7. Software Validation After a Change ............................................................................... 12
4.8. Validation Coverage ........................................................................................................ 12
4.9. Independence of Review.................................................................................................. 12
Page iv
General Principles of Software ValidationGuidance for Industry and FDA Staff
4.10. Flexibility and Responsibility ........................................................................................ 13
SECTION 5. ACTIVITIES AND TASKS ................................................................................ 14
5.1. Software Life Cycle Activities......................................................................................... 14
5.2. Typical Tasks Supporting Validation.............................................................................. 14
5.2.1. Quality Planning ........................................................................................................ 15
5.2.2. Requirements.............................................................................................................. 16
5.2.3. Design......................................................................................................................... 17
5.2.4. Construction or Coding ............................................................................................. 20
5.2.5. Testing by the Software Developer ............................................................................ 21
5.2.6. User Site Testing ........................................................................................................ 27
5.2.7. Maintenance and Software Changes ......................................................................... 28
SECTION 6. VALIDATION OF AUTOMATED PROCESS EQUIPMENT AND QUALITY
SYSTEM SOFTWARE................................................................................................................ 30
6.1. How Much Validation Evidence Is Needed? .................................................................. 31
6.2. Defined User Requirements ............................................................................................ 32
6.3. Validation of Off-the-Shelf Software and Automated Equipment .................................. 33
APPENDIX A - REFERENCES ................................................................................................. 35
Food and Drug Administration References ............................................................................ 35
Other Government References............................................................................................... 36
International and National Consensus Standards .................................................................. 37
Production Process Software References............................................................................... 38
General Software Quality References.................................................................................... 39
APPENDIX B - DEVELOPMENT TEAM ................................................................................ 43
Page 1
General Principles of Software ValidationGuidance for Industry and FDA Staff
General Principles of Software Validation
This document is intended to provide guidance. It represents the Agency’s current
thinking on this topic. It does not create or confer any rights for or on any person and
does not operate to bind Food and Drug Administration (FDA) or the public. An
alternative approach may be used if such approach satisfies the requirements of the
applicable statutes and regulations.
SECTION 1. PURPOSE
This guidance outlines general validation principles that the Food and Drug Administration (FDA)
considers to be applicable to the validation of medical device software or the validation of software
used to design, develop, or manufacture medical devices. This final guidance document, Version 2.0,
supersedes the draft document, General Principles of Software Validation, Version 1.1, dated June
9, 1997.
SECTION 2. SCOPE
This guidance describes how certain provisions of the medical device Quality System regulation apply to
software and the agency’s current approach to evaluating a software validation system. For example,
this document lists elements that are acceptable to the FDA for the validation of software; however, it
does not list all of the activities and tasks that must, in all instances, be used to comply with the law.
The scope of this guidance is somewhat broader than the scope of validation in the strictest definition of
that term. Planning, verification, testing, traceability, configuration management, and many other aspects
of good software engineering discussed in this guidance are important activities that together help to
support a final conclusion that software is validated.
This guidance recommends an integration of software life cycle management and risk management
activities. Based on the intended use and the safety risk associated with the software to be developed,
the software developer should determine the specific approach, the combination of techniques to be
used, and the level of effort to be applied. While this guidance does not recommend any specific life
cycle model or any specific technique or method, it does recommend that software validation and
verification activities be conducted throughout the entire software life cycle.
Where the software is developed by someone other than the device manufacturer (e.g., off-the-shelf
software) the software developer may not be directly responsible for compliance with FDA regulations.
Page 2
General Principles of Software ValidationGuidance for Industry and FDA Staff
In that case, the party with regulatory responsibility (i.e., the device manufacturer) needs to assess the
adequacy of the off-the-shelf software developer’s activities and determine what additional efforts are
needed to establish that the software is validated for the device manufacturer’s intended use.
2.1. APPLICABILITY
This guidance applies to:
• Software used as a component, part, or accessory of a medical device;
• Software that is itself a medical device (e.g., blood establishment software);
• Software used in the production of a device (e.g., programmable logic controllers in manufacturing
equipment); and
• Software used in implementation of the device manufacturer's quality system (e.g., software that
records and maintains the device history record).
This document is based on generally recognized software validation principles and, therefore, can be
applied to any software. For FDA purposes, this guidance applies to any software related to a
regulated medical device, as defined by Section 201(h) of the Federal Food, Drug, and Cosmetic Act
(the Act) and by current FDA software and regulatory policy. This document does not specifically
identify which software is or is not regulated.
2.2. AUDIENCE
This guidance provides useful information and recommendations to the following individuals:
• Persons subject to the medical device Quality System regulation
• Persons responsible for the design, development, or production of medical device software
• Persons responsible for the design, development, production, or procurement of automated
tools used for the design, development, or manufacture of medical devices or software tools
used to implement the quality system itself
• FDA Investigators
• FDA Compliance Officers
• FDA Scientific Reviewers
2.3. THE LEAST BURDENSOME APPROACH
We believe we should consider the least burdensome approach in all areas of medical device regulation.
This guidance reflects our careful review of the relevant scientific and legal requirements and what we
believe is the least burdensome way for you to comply with those requirements. However, if you
believe that an alternative approach would be less burdensome, please contact us so we can consider
Page 3
General Principles of Software ValidationGuidance for Industry and FDA Staff
your point of view. You may send your written comments to the contact person listed in the preface to
this guidance or to the CDRH Ombudsman. Comprehensive information on CDRH’s Ombudsman,
including ways to contact him, can be found on the Internet at:
http://www.fda.gov/cdrh/resolvingdisputes/ombudsman.html.
2.4. REGULATORY REQUIREMENTS FOR SOFTWARE VALIDATION
The FDA’s analysis of 3140 medical device recalls conducted between 1992 and 1998 reveals that
242 of them (7.7%) are attributable to software failures. Of those software related recalls, 192 (or
79%) were caused by software defects that were introduced when changes were made to the software
after its initial production and distribution. Software validation and other related good software
engineering practices discussed in this guidance are a principal means of avoiding such defects and
resultant recalls.
Software validation is a requirement of the Quality System regulation, which was published in the
Federal Register on October 7, 1996 and took effect on June 1, 1997. (See Title 21 Code of Federal
Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.) Validation
requirements apply to software used as components in medical devices, to software that is itself a
medical device, and to software used in production of the device or in implementation of the device
manufacturer's quality system.
Unless specifically exempted in a classification regulation, any medical device software product
developed after June 1, 1997, regardless of its device class, is subject to applicable design control
provisions. (See of 21 CFR §820.30.) This requirement includes the completion of current
development projects, all new development projects, and all changes made to existing medical device
software. Specific requirements for validation of device software are found in
21 CFR §820.30(g). Other design controls, such as planning, input, verification, and reviews, are
required for medical device software. (See 21 CFR §820.30.) The corresponding documented results
from these activities can provide additional support for a conclusion that medical device software is
validated.
Any software used to automate any part of the device production process or any part of the quality
system must be validated for its intended use, as required by 21 CFR §820.70(i). This requirement
applies to any software used to automate device design, testing, component acceptance, manufacturing,
labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality
system.
In addition, computer systems used to create, modify, and maintain electronic records
and to manage electronic signatures are also subject to the validation requirements.
(See 21 CFR §11.10(a).) Such computer systems must be validated to ensure accuracy, reliability,
consistent intended performance, and the ability to discern invalid or altered records.
Page 4
General Principles of Software ValidationGuidance for Industry and FDA Staff
Software for the above applications may be developed in-house or under contract. However, software
is frequently purchased off-the-shelf for a particular intended use. All production and/or quality system
software, even if purchased off-the-shelf, should have documented requirements that fully define its
intended use, and information against which testing results and other evidence can be compared, to
show that the software is validated for its intended use.
The use of off-the-shelf software in automated medical devices and in automated manufacturing and
quality system operations is increasing. Off-the-shelf software may have many capabilities, only a few
of which are needed by the device manufacturer. Device manufacturers are responsible for the
adequacy of the software used in their devices, and used to produce devices. When device
manufacturers purchase "off-the-shelf'' software, they must ensure that it will perform as intended in their
chosen application. For off-the-shelf software used in manufacturing or in the quality system, additional
guidance is included in Section 6.3 of this document. For device software, additional useful information
may be found in FDA’s Guidance for Industry, FDA Reviewers, and Compliance on Off-The-Shelf
Software Use in Medical Devices.
2.4. QUALITY SYSTEM REGULATION VS PRE-MARKET SUBMISSIONS
This document addresses Quality System regulation issues that involve the implementation of software
validation. It provides guidance for the management and control of the software validation process.
The management and control of the software validation process should not be confused with any other
validation requirements, such as process validation for an automated manufacturing process.
Device manufacturers may use the same procedures and records for compliance with quality system and
design control requirements, as well as for pre-market submissions to FDA. This document does not
cover any specific safety or efficacy issues related to software validation. Design issues and
documentation requirements for pre-market submissions of regulated software are not addressed by this
document. Specific issues related to safety and efficacy, and the documentation required in pre-market
submissions, should be addressed to the Office of Device Evaluation (ODE), Center for Devices and
Radiological Health (CDRH) or to the Office of Blood Research and Review, Center for Biologics
Evaluation and Research (CBER). See the references in Appendix A for applicable FDA guidance
documents for pre-market submissions.
Page 5
General Principles of Software ValidationGuidance for Industry and FDA Staff
SECTION 3. CONTEXT FOR SOFTWARE VALIDATION
Many people have asked for specific guidance on what FDA expects them to do to ensure compliance
with the Quality System regulation with regard to software validation. Information on software
validation presented in this document is not new. Validation of software, using the principles and tasks
listed in Sections 4 and 5, has been conducted in many segments of the software industry for well over
20 years.
Due to the great variety of medical devices, processes, and manufacturing facilities, it is not possible to
state in one document all of the specific validation elements that are applicable. However, a general
application of several broad concepts can be used successfully as guidance for software validation.
These broad concepts provide an acceptable framework for building a comprehensive approach to
software validation. Additional specific information is available from many of the references listed in
Appendix A.
3.1. DEFINITIONS AND TERMINOLOGY
Unless defined in the Quality System regulation, or otherwise specified below, all other terms used in
this guidance are as defined in the current edition of the FDA Glossary of Computerized System and
Software Development Terminology.
The medical device Quality System regulation (21 CFR 820.3(k)) defines "establish" to mean "define,
document, and implement." Where it appears in this guidance, the words "establish" and “established”
should be interpreted to have this same meaning.
Some definitions found in the medical device Quality System regulation can be confusing when
compared to commonly used terminology in the software industry. Examples are requirements,
specification, verification, and validation.
3.1.1 Requirements and Specifications
While the Quality System regulation states that design input requirements must be documented, and that
specified requirements must be verified, the regulation does not further clarify the distinction between the
terms “requirement” and “specification.” A requirement can be any need or expectation for a system
or for its software. Requirements reflect the stated or implied needs of the customer, and may be
market-based, contractual, or statutory, as well as an organization's internal requirements. There can be
many different kinds of requirements (e.g., design, functional, implementation, interface, performance, or
physical requirements). Software requirements are typically derived from the system requirements for
those aspects of system functionality that have been allocated to software. Software requirements are
typically stated in functional terms and are defined, refined, and updated as a development project
progresses. Success in accurately and completely documenting software requirements is a crucial factor
in successful validation of the resulting software.
Page 6
General Principles of Software ValidationGuidance for Industry and FDA Staff
A specification is defined as “a document that states requirements.” (See 21 CFR §820.3(y).) It may
refer to or include drawings, patterns, or other relevant documents and usually indicates the means and
the criteria whereby conformity with the requirement can be checked. There are many different kinds of
written specifications, e.g., system requirements specification, software requirements specification,
software design specification, software test specification, software integration specification, etc. All of
these documents establish “specified requirements” and are design outputs for which various forms of
verification are necessary.
3.1.2 Verification and Validation
The Quality System regulation is harmonized with ISO 8402:1994, which treats “verification” and
“validation” as separate and distinct terms. On the other hand, many software engineering journal
articles and textbooks use the terms "verification" and "validation" interchangeably, or in some cases
refer to software "verification, validation, and testing (VV&T)" as if it is a single concept, with no
distinction among the three terms.
Software verification provides objective evidence that the design outputs of a particular phase of the
software development life cycle meet all of the specified requirements for that phase. Software
verification looks for consistency, completeness, and correctness of the software and its supporting
documentation, as it is being developed, and provides support for a subsequent conclusion that software
is validated. Software testing is one of many verification activities intended to confirm that software
development output meets its input requirements. Other verification activities include various static and
dynamic analyses, code and document inspections, walkthroughs, and other techniques.
Software validation is a part of the design validation for a finished device, but is not separately defined
in the Quality System regulation. For purposes of this guidance, FDA considers software validation to
be “confirmation by examination and provision of objective evidence that software
specifications conform to user needs and intended uses, and that the particular requirements
implemented through software can be consistently fulfilled.” In practice, software validation
activities may occur both during, as well as at the end of the software development life cycle to ensure
that all requirements have been fulfilled. Since software is usually part of a larger hardware system, the
validation of software typically includes evidence that all software requirements have been implemented
correctly and completely and are traceable to system requirements. A conclusion that software is
validated is highly dependent upon comprehensive software testing, inspections, analyses, and other
verification tasks performed at each stage of the software development life cycle. Testing of device
software functionality in a simulated use environment, and user site testing are typically included as
components of an overall design validation program for a software automated device.
Software verification and validation are difficult because a developer cannot test forever, and it is hard
to know how much evidence is enough. In large measure, software validation is a matter of developing
a “level of confidence” that the device meets all requirements and user expectations for the software
automated functions and features of the device. Measures such as defects found in specifications
documents, estimates of defects remaining, testing coverage, and other techniques are all used to
